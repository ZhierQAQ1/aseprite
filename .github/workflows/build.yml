name : build
on: [push，pull_request]
jobs :
build:
runs-on: $i{ matrix.os }}
strategy:
fail-fast: false
matrix:
os: [windows-latest]
build_type: [Release]
enable_ui: [on]
include:
- os: windows-latest
build_type: Release
enable_ui: on
steps :
- uses : actions / checkout@v3
with:
submodules : " recursive'
- name: ccache
uses: hendrikmuhs / ccache-action@v1
if : runner.os == 'Linux '
with:
key : ${{ matrix.os }}-${{ matrix.enable_ui }}
- uses : seanmiddleditch/gha-setup-ninja@master
- uses: ilammy / msvc-dev-cmd@v1
if : runner.os == "windows '
- name: Install Dependencies
shell: bash
run:l 
if [[“${{ runner.os }}”== "Linux”]] ; then
sudo apt-get update -qq
sudo apt-get install -y\
libx11-dev libxcursor-dev libxi-dev
fi
- name: Generating Makefiles
shell: bash
run: l
if [["${{ runner.os }}” == "windows”]] ; then
export enable_ccache=off
else
export enable_ccache=onfi
curl -L https://github.com/blueloveTH/ aseprite/releases/download/ve.01/skia.zip --output skia.zip
7z x skia.zip
cmake -s . -B build -G Ninja l
-DCMAKE_BUILD_TYPE=${{ matrix.build_type }}\
-DENABLE_UI=${i matrix.enable_ui }}\
-DENABLE_CCACHE=$enable_ccache\
-DLAF_BACKEND=skia\
-DSKIA_DIR=./ skia\
-DSKIA_LIBRARY_DIR= ./ skia/out/Release-x64 l-DSKIA_LIBRARY=./skia/out/Release-x64/ skia.lib
- name : Compiling
shell: bash
run: |
cd build && ninja
- uses : actions/ upload-artifact@v3
with:
name: aseprite
path: l
D:/a/aseprite/aseprite/build/bin/data
D:/ a/aseprite/aseprite/build/bin/aseprite.exe
